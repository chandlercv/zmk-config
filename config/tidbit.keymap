/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>


/* Enable ONLY ONE of the &encoder_1 nodes. They are wired to the same pins.*/
&encoder_1 {
    status = "okay";
};

&encoder_2 {
    status = "okay";
};

&encoder_3 {
    status = "okay";
};

&encoder_4 {
    status = "okay";
};

/* Add any encoder(s) you have enabled to the sensors node, separated by spaces. */
&sensors {
    sensors = <&encoder_1 &encoder_2 &encoder_3 &encoder_4>;
};

/{
    behaviors {
        td_save: save {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(S)>, <&kp LC(LS(S))>, <&kp LC(LA(S))>;
        };

        td_new: new {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(N)>, <&kp LC(LS(N))>;
        };

        td_close: close {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(W)>, <&kp LA(F4)>;
        };

        td_f13: f13 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F13>, <&kp LC(F13)>;
        };

        td_f14: f14 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F14>, <&kp LC(F14)>;
        };

        td_f15: f15 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F15>, <&kp LC(F15)>;
        };

        td_f21: f21 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F21>, <&kp LC(F21)>;
        };

        td_f22: f22 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F22>, <&kp LC(F22)>;
        };

        td_f23: f23 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F23>, <&kp LC(F23)>;
        };

        td_f24: f24 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F24>, <&kp LC(F24)>;
        };

        td_app: AppMenu {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LG(N)>, <&kp LG(LC(N))>, <&kp K_APP>;
        };

        rgb_bright: rgb_bright {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        rgb_hue: rgb_hue {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };

        rgb_sat: rgb_sat {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                            &kp LC(X)       &td_app         &td_new
                &kp F20     &td_close       &kp LS(LC(T))   &td_save
                &kp LA(X)   &td_f21         &td_f22         &td_save
                &kp LA(X)   &td_f15         &td_f23         &lt 1 F24
                &kp LG(UP)  &td_f13         &td_f14         &kp LC(C)
            >;

            sensor-bindings = <&inc_dec_kp F16 F17 &inc_dec_kp LC(TAB) LS(LC(TAB)) &inc_dec_kp LC(GRAVE) LS(LC(GRAVE)) &inc_dec_kp F18 F19>;
        };

         func_layer {
             bindings = <
                                &soft_off       &rgb_ug RGB_TOG     &bootloader
                &none           &out OUT_USB    &out OUT_BLE        &bt BT_CLR
                &none           &bt BT_SEL 3    &bt BT_SEL 0        &bt BT_CLR
                &none           &bt BT_SEL 1    &bt BT_SEL 2        &trans
                &kp C_MUTE      &out OUT_TOG    &bt BT_PRV          &bt BT_NXT
             >;

             sensor-bindings = <&rgb_hue &rgb_sat &rgb_bright &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
         };
    };
};

